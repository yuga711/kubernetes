workspace(name = "io_k8s_kubernetes")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")
load("//build:workspace_mirror.bzl", "mirror")

http_archive(
    name = "io_k8s_repo_infra",
    strip_prefix = "repo-infra-0.1.1",
    sha256 = "6c916da43b701e2947f147f3791b3355d8a342dd6cb81887b7d6db184879e387",
    urls = [
        "https://github.com/kubernetes/repo-infra/archive/v0.1.1.tar.gz",
    ],
)

load("@io_k8s_repo_infra//:load.bzl", repo_infra_repositories = "repositories")

repo_infra_repositories()

load("@io_k8s_repo_infra//:repos.bzl", repo_infra_configure = "configure", repo_infra_go_repositories = "go_repositories")

load("@io_bazel_rules_go//go:deps.bzl", "go_download_sdk", "go_register_toolchains", "go_rules_dependencies")

go_rules_dependencies()

GOBORING_VERSION = "go1.15.2b5"

go_download_sdk(
    name = "go_sdk",
    sdks = {
        "linux_amd64": (
            GOBORING_VERSION + ".linux-amd64.tar.gz",
            "30c04d854fc8990017ee8c180c1407a4f26c016e3a4134161bbf41c9d16452e3",
        ),
    },
    urls = ["https://storage.googleapis.com/go-boringcrypto/{}"],
)

http_file(
    name = "go_src",
    downloaded_file_path = GOBORING_VERSION + ".src.tar.gz",
    sha256 = "67432c0b0a02aa6cc0c49ab285f1c6935a16dadfebd77dfabca7e31907240bc9",
    urls = ["https://storage.googleapis.com/go-boringcrypto/" + GOBORING_VERSION + ".src.tar.gz"],
)

go_register_toolchains()

repo_infra_configure(
    minimum_bazel_version = "2.2.0",
)

# Install this dependency by running apt-get install glibc-source
new_local_repository(
    name = "glibc_src",
    build_file = "third_party/glibc.BUILD",
    path = "/usr/src/glibc",
)

repo_infra_go_repositories()

# begin setup rules_docker
http_archive(
    name = "io_bazel_rules_docker",
    sha256 = "4521794f0fba2e20f3bf15846ab5e01d5332e587e9ce81629c7f96c793bb7036",
    strip_prefix = "rules_docker-0.14.4",
    urls = mirror("https://github.com/bazelbuild/rules_docker/releases/download/v0.14.4/rules_docker-v0.14.4.tar.gz"),
)

load(
    "@io_bazel_rules_docker//repositories:repositories.bzl",
    container_repositories = "repositories",
)

container_repositories()

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")

container_deps()

load("@io_bazel_rules_docker//repositories:pip_repositories.bzl", "pip_deps")

pip_deps()

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_pull",
)

# end setup rules_docker

container_pull(
    name = "official_busybox_glibc",
    digest = "sha256:6b438394f0ac955edd27aa2fc819ff8ee3371ca315ec83f53ed8541c502f71ca",
    registry = "index.docker.io",
    repository = "library/busybox",
    tag = "glibc",  # ignored, but kept here for documentation
)

load("//build:workspace.bzl", "release_dependencies")

release_dependencies()

load("//build:workspace_mirror.bzl", "export_urls")

export_urls("workspace_urls")

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()
